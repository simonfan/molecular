{
    "project": {
        "name": "molecular",
        "version": "0.0.0"
    },
    "files": {
        "src/molecular/data/model/item.js": {
            "name": "src/molecular/data/model/item.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/molecular/node/command-channel.js": {
            "name": "src/molecular/node/command-channel.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/molecular/node/command.js": {
            "name": "src/molecular/node/command.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/molecular/view/directives/dom-events.js": {
            "name": "src/molecular/view/directives/dom-events.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/molecular/view/directives.js": {
            "name": "src/molecular/view/directives.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/molecular/view/dom-manipulation.js": {
            "name": "src/molecular/view/dom-manipulation.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/molecular/view/rendering.js": {
            "name": "src/molecular/view/rendering.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/molecular/auxiliary.js": {
            "name": "src/molecular/auxiliary.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/molecular/node.js": {
            "name": "src/molecular/node.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/molecular/view.js": {
            "name": "src/molecular/view.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/molecular.js": {
            "name": "src/molecular.js",
            "modules": {
                "Molecular": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "Molecular": {
            "name": "Molecular",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/molecular.js",
            "line": 5,
            "description": "AMD module."
        }
    },
    "classes": {},
    "classitems": [
        {
            "file": "src/molecular/data/model/item.js",
            "line": 23,
            "description": "Whether to throw errors on schema problems.",
            "type": "{Boolean}",
            "class": ""
        },
        {
            "file": "src/molecular/node/command-channel.js",
            "line": 5,
            "description": "Load command builders.",
            "type": "{[type]}",
            "class": ""
        },
        {
            "file": "src/molecular/node/command-channel.js",
            "line": 34,
            "description": "Channels a command through an array of nodes",
            "params": [
                {
                    "name": "nodes",
                    "description": "[description]",
                    "type": "[type]"
                },
                {
                    "name": "command",
                    "description": "[description]",
                    "type": "[type]"
                }
            ],
            "return": {
                "description": "[description]",
                "type": "[type]"
            },
            "class": ""
        },
        {
            "file": "src/molecular/node/command-channel.js",
            "line": 66,
            "description": "Issue command up the chain.",
            "params": [
                {
                    "name": "name",
                    "description": "[description]",
                    "type": "[type]"
                }
            ],
            "return": {
                "description": "[description]",
                "type": "[type]"
            },
            "class": ""
        },
        {
            "file": "src/molecular/node/command-channel.js",
            "line": 86,
            "description": "Issues command down the chain.",
            "return": {
                "description": "[description]",
                "type": "[type]"
            },
            "class": ""
        },
        {
            "file": "src/molecular/node/command-channel.js",
            "line": 128,
            "description": "Receives a command.",
            "params": [
                {
                    "name": "command",
                    "description": "[description]",
                    "type": "[type]"
                }
            ],
            "return": {
                "description": "[description]",
                "type": "[type]"
            },
            "class": ""
        },
        {
            "file": "src/molecular/node/command.js",
            "line": 18,
            "description": "Set propagate flag to false.",
            "return": {
                "description": "[description]",
                "type": "[type]"
            },
            "class": ""
        },
        {
            "file": "src/molecular/node/command.js",
            "line": 26,
            "description": "Set the response property then\nstop propagation.",
            "params": [
                {
                    "name": "value",
                    "description": "[description]",
                    "type": "[type]"
                }
            ],
            "return": {
                "description": "[description]",
                "type": "[type]"
            },
            "class": ""
        },
        {
            "file": "src/molecular/node/command.js",
            "line": 48,
            "description": "Response should be an array.",
            "type": "{Array}",
            "class": ""
        },
        {
            "file": "src/molecular/node/command.js",
            "line": 55,
            "description": "Set propagate flag to false.",
            "return": {
                "description": "[description]",
                "type": "[type]"
            },
            "class": ""
        },
        {
            "file": "src/molecular/node/command.js",
            "line": 63,
            "description": "Set the response property then\nstop propagation.",
            "params": [
                {
                    "name": "value",
                    "description": "[description]",
                    "type": "[type]"
                }
            ],
            "return": {
                "description": "[description]",
                "type": "[type]"
            },
            "class": ""
        },
        {
            "file": "src/molecular/view/directives/dom-events.js",
            "line": 7,
            "description": "<div data-m-click=\"something\"></div>",
            "params": [
                {
                    "name": "element",
                    "description": "[description]",
                    "type": "[type]"
                }
            ],
            "return": {
                "description": "[description]",
                "type": "[type]"
            },
            "class": ""
        },
        {
            "file": "src/molecular/view/directives.js",
            "line": 7,
            "description": "Hash that holds all directive processors.",
            "type": "{Object}",
            "class": ""
        },
        {
            "file": "src/molecular/view/directives.js",
            "line": 15,
            "description": "[mView description]",
            "params": [
                {
                    "name": "element",
                    "description": "[description]",
                    "type": "[type]"
                },
                {
                    "name": "value",
                    "description": "[description]",
                    "type": "[type]"
                }
            ],
            "return": {
                "description": "[description]",
                "type": "[type]"
            },
            "class": ""
        },
        {
            "file": "src/molecular/view/directives.js",
            "line": 35,
            "description": "DOM events directives.",
            "class": ""
        },
        {
            "file": "src/molecular/view/directives.js",
            "line": 41,
            "description": "Reference to directives",
            "type": "{[type]}",
            "class": ""
        },
        {
            "file": "src/molecular/view/directives.js",
            "line": 49,
            "description": "Finds all elements that should be processed by a\ngiven directive given a rootElement and a directiveName",
            "class": ""
        },
        {
            "file": "src/molecular/view/directives.js",
            "line": 60,
            "description": "Incorporates an element to the",
            "params": [
                {
                    "name": "element",
                    "description": "[description]",
                    "type": "[type]"
                }
            ],
            "return": {
                "description": "[description]",
                "type": "[type]"
            },
            "class": ""
        },
        {
            "file": "src/molecular/view/dom-manipulation.js",
            "line": 5,
            "description": "The",
            "type": "{[type]}",
            "class": ""
        },
        {
            "file": "src/molecular/view/rendering.js",
            "line": 42,
            "description": "Template defaults to undefined.",
            "type": "{[type]}",
            "class": ""
        },
        {
            "file": "src/molecular/view/rendering.js",
            "line": 48,
            "description": "Should return a function.",
            "type": "{[type]}",
            "class": ""
        },
        {
            "file": "src/molecular/auxiliary.js",
            "line": 12,
            "description": "Copied from Epeli's underscore.string \"camelize\"\nhttps://github.com/epeli/underscore.string/blob/master/lib/underscore.string.js",
            "params": [
                {
                    "name": "str",
                    "description": "[description]",
                    "type": "[type]"
                }
            ],
            "return": {
                "description": "[description]",
                "type": "[type]"
            },
            "class": ""
        },
        {
            "file": "src/molecular/auxiliary.js",
            "line": 23,
            "description": "Converts stuff to dashed.",
            "params": [
                {
                    "name": "str",
                    "description": "[description]",
                    "type": "[type]"
                }
            ],
            "return": {
                "description": "[description]",
                "type": "[type]"
            },
            "class": ""
        },
        {
            "file": "src/molecular/node.js",
            "line": 1,
            "description": "Defines an object factory that is conscious of chain position\nand is capable of operatijng as a link in a chain of responsibility.",
            "class": ""
        },
        {
            "file": "src/molecular/node.js",
            "line": 31,
            "description": "Hash on which event handlers will be set.",
            "type": "{Object}",
            "class": ""
        },
        {
            "file": "src/molecular/view.js",
            "line": 11,
            "description": "Define the viewFactory",
            "class": ""
        },
        {
            "file": "src/molecular/view.js",
            "line": 20,
            "description": "Pick some options.",
            "class": ""
        },
        {
            "file": "src/molecular/view.js",
            "line": 28,
            "description": "The adapted DOM element.",
            "type": "{[type]}",
            "class": ""
        },
        {
            "file": "src/molecular/view.js",
            "line": 47,
            "description": "Keep reference to the original extend method.",
            "type": "{[type]}",
            "class": ""
        }
    ],
    "warnings": [
        {
            "message": "Missing item type\nWhether to throw errors on schema problems.",
            "line": " src/molecular/data/model/item.js:23"
        },
        {
            "message": "Missing item type\nLoad command builders.",
            "line": " src/molecular/node/command-channel.js:5"
        },
        {
            "message": "Missing item type\nChannels a command through an array of nodes",
            "line": " src/molecular/node/command-channel.js:34"
        },
        {
            "message": "Missing item type\nIssue command up the chain.",
            "line": " src/molecular/node/command-channel.js:66"
        },
        {
            "message": "Missing item type\nIssues command down the chain.",
            "line": " src/molecular/node/command-channel.js:86"
        },
        {
            "message": "Missing item type\nReceives a command.",
            "line": " src/molecular/node/command-channel.js:128"
        },
        {
            "message": "Missing item type\nSet propagate flag to false.",
            "line": " src/molecular/node/command.js:18"
        },
        {
            "message": "Missing item type\nSet the response property then\nstop propagation.",
            "line": " src/molecular/node/command.js:26"
        },
        {
            "message": "Missing item type\nResponse should be an array.",
            "line": " src/molecular/node/command.js:48"
        },
        {
            "message": "Missing item type\nSet propagate flag to false.",
            "line": " src/molecular/node/command.js:55"
        },
        {
            "message": "Missing item type\nSet the response property then\nstop propagation.",
            "line": " src/molecular/node/command.js:63"
        },
        {
            "message": "Missing item type\n<div data-m-click=\"something\"></div>",
            "line": " src/molecular/view/directives/dom-events.js:7"
        },
        {
            "message": "Missing item type\nHash that holds all directive processors.",
            "line": " src/molecular/view/directives.js:7"
        },
        {
            "message": "Missing item type\n[mView description]",
            "line": " src/molecular/view/directives.js:15"
        },
        {
            "message": "Missing item type\nDOM events directives.",
            "line": " src/molecular/view/directives.js:35"
        },
        {
            "message": "Missing item type\nReference to directives",
            "line": " src/molecular/view/directives.js:41"
        },
        {
            "message": "Missing item type\nFinds all elements that should be processed by a\ngiven directive given a rootElement and a directiveName",
            "line": " src/molecular/view/directives.js:49"
        },
        {
            "message": "Missing item type\nIncorporates an element to the",
            "line": " src/molecular/view/directives.js:60"
        },
        {
            "message": "Missing item type\nThe",
            "line": " src/molecular/view/dom-manipulation.js:5"
        },
        {
            "message": "Missing item type\nTemplate defaults to undefined.",
            "line": " src/molecular/view/rendering.js:42"
        },
        {
            "message": "Missing item type\nShould return a function.",
            "line": " src/molecular/view/rendering.js:48"
        },
        {
            "message": "Missing item type\nCopied from Epeli's underscore.string \"camelize\"\nhttps://github.com/epeli/underscore.string/blob/master/lib/underscore.string.js",
            "line": " src/molecular/auxiliary.js:12"
        },
        {
            "message": "Missing item type\nConverts stuff to dashed.",
            "line": " src/molecular/auxiliary.js:23"
        },
        {
            "message": "Missing item type\nDefines an object factory that is conscious of chain position\nand is capable of operatijng as a link in a chain of responsibility.",
            "line": " src/molecular/node.js:1"
        },
        {
            "message": "Missing item type\nHash on which event handlers will be set.",
            "line": " src/molecular/node.js:31"
        },
        {
            "message": "Missing item type\nDefine the viewFactory",
            "line": " src/molecular/view.js:11"
        },
        {
            "message": "Missing item type\nPick some options.",
            "line": " src/molecular/view.js:20"
        },
        {
            "message": "Missing item type\nThe adapted DOM element.",
            "line": " src/molecular/view.js:28"
        },
        {
            "message": "Missing item type\nKeep reference to the original extend method.",
            "line": " src/molecular/view.js:47"
        }
    ]
}