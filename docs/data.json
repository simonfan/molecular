{
    "project": {
        "name": "molecular",
        "version": "0.0.0"
    },
    "files": {
        "src/molecular/node/command-system.js": {
            "name": "src/molecular/node/command-system.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/molecular/view/directives/dom-events.js": {
            "name": "src/molecular/view/directives/dom-events.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/molecular/view/directives.js": {
            "name": "src/molecular/view/directives.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/molecular/view/dom-manipulation.js": {
            "name": "src/molecular/view/dom-manipulation.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/molecular/view/rendering.js": {
            "name": "src/molecular/view/rendering.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/molecular/auxiliary.js": {
            "name": "src/molecular/auxiliary.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/molecular/node.js": {
            "name": "src/molecular/node.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/molecular/view.js": {
            "name": "src/molecular/view.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/molecular.js": {
            "name": "src/molecular.js",
            "modules": {
                "Molecular": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "Molecular": {
            "name": "Molecular",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/molecular.js",
            "line": 5,
            "description": "AMD module."
        }
    },
    "classes": {},
    "classitems": [
        {
            "file": "src/molecular/node/command-system.js",
            "line": 7,
            "description": "Decorator pattern for building a command object.",
            "params": [
                {
                    "name": "options",
                    "description": "[description]",
                    "type": "[type]"
                },
                {
                    "name": "propagation",
                    "description": "[description]",
                    "type": "[type]"
                }
            ],
            "return": {
                "description": "[description]",
                "type": "[type]"
            },
            "class": ""
        },
        {
            "file": "src/molecular/node/command-system.js",
            "line": 50,
            "description": "Bubbles a command up the chain.",
            "params": [
                {
                    "name": "command",
                    "description": "[description]",
                    "type": "[type]"
                }
            ],
            "return": {
                "description": "[description]",
                "type": "[type]"
            },
            "class": ""
        },
        {
            "file": "src/molecular/node/command-system.js",
            "line": 72,
            "description": "Captures a command.",
            "params": [
                {
                    "name": "command",
                    "description": "[description]",
                    "type": "[type]"
                }
            ],
            "return": {
                "description": "[description]",
                "type": "[type]"
            },
            "class": ""
        },
        {
            "file": "src/molecular/node/command-system.js",
            "line": 97,
            "description": "Initialize a command.",
            "params": [
                {
                    "name": "name",
                    "description": "[description]",
                    "type": "[type]"
                },
                {
                    "name": "data",
                    "description": "[description]",
                    "type": "[type]"
                }
            ],
            "return": {
                "description": "[description]",
                "type": "[type]"
            },
            "class": ""
        },
        {
            "file": "src/molecular/node/command-system.js",
            "line": 163,
            "description": "Command handling.\n\na given command.",
            "class": ""
        },
        {
            "file": "src/molecular/view/directives/dom-events.js",
            "line": 7,
            "description": "<div data-m-click=\"something\"></div>",
            "params": [
                {
                    "name": "element",
                    "description": "[description]",
                    "type": "[type]"
                }
            ],
            "return": {
                "description": "[description]",
                "type": "[type]"
            },
            "class": ""
        },
        {
            "file": "src/molecular/view/directives.js",
            "line": 7,
            "description": "DOM events directives.",
            "class": ""
        },
        {
            "file": "src/molecular/view/directives.js",
            "line": 12,
            "description": "[mView description]",
            "params": [
                {
                    "name": "element",
                    "description": "[description]",
                    "type": "[type]"
                },
                {
                    "name": "value",
                    "description": "[description]",
                    "type": "[type]"
                }
            ],
            "return": {
                "description": "[description]",
                "type": "[type]"
            },
            "class": ""
        },
        {
            "file": "src/molecular/view/dom-manipulation.js",
            "line": 5,
            "description": "The",
            "type": "{[type]}",
            "class": ""
        },
        {
            "file": "src/molecular/view/rendering.js",
            "line": 37,
            "description": "Template defaults to undefined.",
            "type": "{[type]}",
            "class": ""
        },
        {
            "file": "src/molecular/view/rendering.js",
            "line": 43,
            "description": "Should return a function.",
            "type": "{[type]}",
            "class": ""
        },
        {
            "file": "src/molecular/auxiliary.js",
            "line": 12,
            "description": "Copied from Epeli's underscore.string \"camelize\"\nhttps://github.com/epeli/underscore.string/blob/master/lib/underscore.string.js",
            "params": [
                {
                    "name": "str",
                    "description": "[description]",
                    "type": "[type]"
                }
            ],
            "return": {
                "description": "[description]",
                "type": "[type]"
            },
            "class": ""
        },
        {
            "file": "src/molecular/auxiliary.js",
            "line": 23,
            "description": "Converts stuff to dashed.",
            "params": [
                {
                    "name": "str",
                    "description": "[description]",
                    "type": "[type]"
                }
            ],
            "return": {
                "description": "[description]",
                "type": "[type]"
            },
            "class": ""
        },
        {
            "file": "src/molecular/node.js",
            "line": 1,
            "description": "Defines an object factory that is conscious of chain position\nand is capable of operatijng as a link in a chain of responsibility.",
            "class": ""
        },
        {
            "file": "src/molecular/node.js",
            "line": 22,
            "description": "Array on which children nodes will be stored.",
            "type": "{Array}",
            "class": ""
        },
        {
            "file": "src/molecular/node.js",
            "line": 29,
            "description": "Hash on which event handlers will be set.",
            "type": "{Object}",
            "class": ""
        },
        {
            "file": "src/molecular/node.js",
            "line": 46,
            "description": "Puts children objects into the node.",
            "params": [
                {
                    "name": "children",
                    "description": "[description]",
                    "type": "[type]"
                }
            ],
            "class": ""
        },
        {
            "file": "src/molecular/view.js",
            "line": 9,
            "description": "Finds all elements that should be processed by a\ngiven directive given a rootElement and a directiveName",
            "class": ""
        },
        {
            "file": "src/molecular/view.js",
            "line": 19,
            "description": "Define the viewFactory",
            "class": ""
        },
        {
            "file": "src/molecular/view.js",
            "line": 28,
            "description": "Pick some options.",
            "class": ""
        },
        {
            "file": "src/molecular/view.js",
            "line": 39,
            "description": "The adapted DOM element.",
            "type": "{[type]}",
            "class": ""
        },
        {
            "file": "src/molecular/view.js",
            "line": 75,
            "description": "Define directives.",
            "type": "{[type]}",
            "class": ""
        },
        {
            "file": "src/molecular/view.js",
            "line": 86,
            "description": "Keep reference to the original extend method.",
            "type": "{[type]}",
            "class": ""
        }
    ],
    "warnings": [
        {
            "message": "Missing item type\nDecorator pattern for building a command object.",
            "line": " src/molecular/node/command-system.js:7"
        },
        {
            "message": "Missing item type\nBubbles a command up the chain.",
            "line": " src/molecular/node/command-system.js:50"
        },
        {
            "message": "Missing item type\nCaptures a command.",
            "line": " src/molecular/node/command-system.js:72"
        },
        {
            "message": "Missing item type\nInitialize a command.",
            "line": " src/molecular/node/command-system.js:97"
        },
        {
            "message": "Missing item type\nCommand handling.\n\na given command.",
            "line": " src/molecular/node/command-system.js:163"
        },
        {
            "message": "Missing item type\n<div data-m-click=\"something\"></div>",
            "line": " src/molecular/view/directives/dom-events.js:7"
        },
        {
            "message": "Missing item type\nDOM events directives.",
            "line": " src/molecular/view/directives.js:7"
        },
        {
            "message": "Missing item type\n[mView description]",
            "line": " src/molecular/view/directives.js:12"
        },
        {
            "message": "Missing item type\nThe",
            "line": " src/molecular/view/dom-manipulation.js:5"
        },
        {
            "message": "Missing item type\nTemplate defaults to undefined.",
            "line": " src/molecular/view/rendering.js:37"
        },
        {
            "message": "Missing item type\nShould return a function.",
            "line": " src/molecular/view/rendering.js:43"
        },
        {
            "message": "Missing item type\nCopied from Epeli's underscore.string \"camelize\"\nhttps://github.com/epeli/underscore.string/blob/master/lib/underscore.string.js",
            "line": " src/molecular/auxiliary.js:12"
        },
        {
            "message": "Missing item type\nConverts stuff to dashed.",
            "line": " src/molecular/auxiliary.js:23"
        },
        {
            "message": "Missing item type\nDefines an object factory that is conscious of chain position\nand is capable of operatijng as a link in a chain of responsibility.",
            "line": " src/molecular/node.js:1"
        },
        {
            "message": "Missing item type\nArray on which children nodes will be stored.",
            "line": " src/molecular/node.js:22"
        },
        {
            "message": "Missing item type\nHash on which event handlers will be set.",
            "line": " src/molecular/node.js:29"
        },
        {
            "message": "Missing item type\nPuts children objects into the node.",
            "line": " src/molecular/node.js:46"
        },
        {
            "message": "Missing item type\nFinds all elements that should be processed by a\ngiven directive given a rootElement and a directiveName",
            "line": " src/molecular/view.js:9"
        },
        {
            "message": "Missing item type\nDefine the viewFactory",
            "line": " src/molecular/view.js:19"
        },
        {
            "message": "Missing item type\nPick some options.",
            "line": " src/molecular/view.js:28"
        },
        {
            "message": "Missing item type\nThe adapted DOM element.",
            "line": " src/molecular/view.js:39"
        },
        {
            "message": "Missing item type\nDefine directives.",
            "line": " src/molecular/view.js:75"
        },
        {
            "message": "Missing item type\nKeep reference to the original extend method.",
            "line": " src/molecular/view.js:86"
        }
    ]
}